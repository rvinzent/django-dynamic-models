[tool.poetry]
name = "y"
version = "0.4.0"
description = "Dynamic Django models allow users to define, edit, and populate their own database schema."
authors = ["Ryan Vinzent <ryan.vinzent@gmai;l.com>"]
license = "MIT License"

[tool.poetry.dependencies]
python = "^3.8"
Django = ">=3.2,<5.0"
psycopg2-binary = "^2.9.3"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-django = "^4.5.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py38", "py39"]
include = '\.pyi?$'

[tool.isort]
atomic = true
combine_as_imports = true
default_section = 'THIRDPARTY'
include_trailing_comma = true
known_django = 'django'
line_length = 100
lines_after_imports = 2
multi_line_output = 3
no_lines_before = 'STDLIB'
profile = "django"
sections = ['FUTURE', 'STDLIB', 'DJANGO', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
skip = ['.git', 'venv', 'env', '.venv']
skip_glob = ['**/migrations/**', 'manage.py']
src_paths = ['dynamic_models', 'settings', 'tests']

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
addopts = "--cov --cov-report term-missing:skip-covered"